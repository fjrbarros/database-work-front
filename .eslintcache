[{"/home/fabio/database-work/database-work-front/src/theme/index.jsx":"1","/home/fabio/database-work/database-work-front/src/store/reducer.jsx":"2","/home/fabio/database-work/database-work-front/src/index.js":"3","/home/fabio/database-work/database-work-front/src/App.js":"4","/home/fabio/database-work/database-work-front/src/store/store.jsx":"5","/home/fabio/database-work/database-work-front/src/store/actions.jsx":"6","/home/fabio/database-work/database-work-front/src/pages/Login.jsx":"7","/home/fabio/database-work/database-work-front/src/components/Index.jsx":"8","/home/fabio/database-work/database-work-front/src/components/containers/ContainerCenter.jsx":"9","/home/fabio/database-work/database-work-front/src/components/containers/ContainerDefault.jsx":"10","/home/fabio/database-work/database-work-front/src/components/table/MaterialTable.jsx":"11","/home/fabio/database-work/database-work-front/src/api/Index.jsx":"12","/home/fabio/database-work/database-work-front/src/pages/Usuario.jsx":"13","/home/fabio/database-work/database-work-front/src/pages/Cidade.jsx":"14"},{"size":1371,"mtime":1606620436171,"results":"15","hashOfConfig":"16"},{"size":578,"mtime":1606532865147,"results":"17","hashOfConfig":"16"},{"size":1118,"mtime":1606532490195,"results":"18","hashOfConfig":"16"},{"size":2115,"mtime":1606837715368,"results":"19","hashOfConfig":"16"},{"size":276,"mtime":1606532618675,"results":"20","hashOfConfig":"16"},{"size":201,"mtime":1606532115131,"results":"21","hashOfConfig":"16"},{"size":5364,"mtime":1606792997411,"results":"22","hashOfConfig":"16"},{"size":217,"mtime":1606628889552,"results":"23","hashOfConfig":"16"},{"size":526,"mtime":1606594611736,"results":"24","hashOfConfig":"16"},{"size":456,"mtime":1606605965259,"results":"25","hashOfConfig":"16"},{"size":4777,"mtime":1606963608627,"results":"26","hashOfConfig":"16"},{"size":116,"mtime":1606608827103,"results":"27","hashOfConfig":"16"},{"size":12509,"mtime":1606798809420,"results":"28","hashOfConfig":"16"},{"size":7270,"mtime":1606966841711,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},"v0fiui",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"33"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/fabio/database-work/database-work-front/src/theme/index.jsx",["66"],"import { createMuiTheme } from '@material-ui/core';\n\nconst mui = createMuiTheme({\n    props: {\n        MuiTextField: {\n            variant: 'filled',\n            margin: 'normal',\n            fullWidth: true,\n        },\n        MuiButton: {\n            variant: 'contained'\n        }\n    },\n    typography: {\n        h1: {\n            fontSize: 28\n        },\n        h2: {\n            fontSize: 24\n        },\n        h3: {\n            fontSize: 16,\n            lineHeight: 1.4\n        },\n        subtitle1: {\n            fontSize: 14\n        },\n        body1: {\n            fontSize: 14\n        }\n    }\n});\n\nexport default {\n    ...mui,\n    palette: {\n        ...mui.palette,\n        background: {\n            ...mui.palette.background,\n            paper: '#fafafa',\n            default: '#f4f4f4'\n        }\n    },\n    appDrawer: {\n        width: 240,\n        borderColor: '#e0e0e0'\n    },\n    appHeader: {\n        toolbar: {\n            background: '#ffffff',\n            foreground: mui.palette.text.primary,\n            height: 60\n        }\n    },\n    errorList: {\n        border: '1px solid #e0e0e0',\n        background: '#fff',\n        color: mui.palette.error.main,\n        borderRadius: '5px',\n        marginTop: '10px'\n    },\n    errorListItem: {\n        paddingTop: '2px',\n        paddingBottom: '2px'\n    },\n    defaultColor: {\n        color: '#6200ee'\n    }\n};",["67","68"],"/home/fabio/database-work/database-work-front/src/store/reducer.jsx",[],["69","70"],"/home/fabio/database-work/database-work-front/src/index.js",[],["71","72"],"/home/fabio/database-work/database-work-front/src/App.js",["73","74"],"// import React from \"react\";\n// import { useSelector, useDispatch } from \"react-redux\";\n\n// export default function App() {\n//     const dispatch = useDispatch();\n//     const newValue = useSelector((state) => state.newValue);\n//     const newValueParam = useSelector((state) => state.newValueParam);\n\n//     return (\n//         <div>\n//             <h3>{newValue}</h3>\n//             <button onClick={() => dispatch({ type: \"MAIS\" })}>+</button>\n//             <button onClick={() => dispatch({ type: \"MENOS\" })}>-</button>\n\n//             <h3>{newValueParam}</h3>\n//             <button onClick={() => dispatch({ type: \"MAISPARAM\", param: 2 })}>\n//                 +\n//             </button>\n//             <button onClick={() => dispatch({ type: \"MENOSPARAM\", param: 2 })}>\n//                 -\n//             </button>\n//         </div>\n//     );\n// }\n\n\n\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Usuario from './pages/Usuario';\nimport Cidade from './pages/Cidade';\n\n// function LoadingPage() {\n//     return (\n//         // TODO\n//         <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', height: '100vh' }}>\n//             Carregando...\n//         </div>\n//     );\n// }\n\n// function PrivateRoute(props) {\n//     const usuario = useSelector(state => state.sessao.usuario);\n\n//     if (!usuario) {\n//         const redirectTo = props.location.pathname;\n//         return <Redirect to={{ pathname: '/login', state: { redirectTo } }} />;\n//     }\n//     return <Route {...props} />;\n// }\n\nexport default function App() {\n    // const loading = useSelector(state => state.app.loading);\n\n    // if (loading) {\n    //     return <LoadingPage />;\n    // }\n\n    return (\n        <BrowserRouter>\n            <Switch>\n            <Route path='/cidade' component={Cidade} />\n                <Route path='/usuario' component={Usuario} />\n                <Route path='/' component={Login} />\n            </Switch>\n        </BrowserRouter>\n    );\n}","/home/fabio/database-work/database-work-front/src/store/store.jsx",[],"/home/fabio/database-work/database-work-front/src/store/actions.jsx",[],"/home/fabio/database-work/database-work-front/src/pages/Login.jsx",[],"/home/fabio/database-work/database-work-front/src/components/Index.jsx",[],["75","76"],"/home/fabio/database-work/database-work-front/src/components/containers/ContainerCenter.jsx",[],["77","78"],"/home/fabio/database-work/database-work-front/src/components/containers/ContainerDefault.jsx",[],"/home/fabio/database-work/database-work-front/src/components/table/MaterialTable.jsx",["79"],"/home/fabio/database-work/database-work-front/src/api/Index.jsx",[],"/home/fabio/database-work/database-work-front/src/pages/Usuario.jsx",["80"],"import React, { useEffect, useState } from 'react';\nimport SaveIcon from '@material-ui/icons/Save';\nimport { Box, Button, TextField, Typography, IconButton, InputAdornment } from '@material-ui/core';\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\nimport { ContainerDefault, ContainerCenter, MaterialTable } from '../components/Index';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Api from '../api/Index';\nimport toaster from 'toasted-notes';\nimport 'toasted-notes/src/styles.css';\nimport Swal from 'sweetalert2';\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        backgroundColor: theme.palette.background,\n        position: 'absolute',\n        height: '100%',\n        width: '100%'\n    },\n\n    containerCenter: {\n        position: 'relative',\n        margin: '0 auto',\n        height: '100%',\n        maxWidth: '700px',\n        backgroundColor: '#ffffff',\n        borderRadius: '10px'\n    },\n\n    containerHeader: {\n        backgroundColor: '#6b6b6b',\n        padding: '15px',\n        textAlign: 'center',\n        '& p': {\n            color: '#ffffff',\n            fontSize: '17px'\n        }\n    },\n\n    contentInput: {\n        display: 'flex'\n    },\n\n    textField: {\n        margin: '10px 10px 0px'\n    },\n\n    contentButton: {\n        display: 'flex',\n        justifyContent: 'flex-end'\n    },\n\n    btnSalvar: {\n        margin: '10px',\n        width: '100px'\n    }\n}));\n\nexport default function Usuario() {\n    const classes = useStyles();\n    const [dadosUsuario, setDadosUsuario] = useState([]);\n    const [showPassword, setShowPassword] = useState(false);\n    const colunsHeader = ['Código', 'Nome', 'Cpf', 'Data nascimento', 'Telefone', 'Editar', 'Excluir'];\n    const [ruas, setRuas] = useState([]);\n    const [values, setValues] = useState({\n        idUsuario: null,\n        nome: '',\n        cpf: '',\n        dataNascimento: '',\n        telefone: '',\n        senha: '',\n        tipoUsuario: '',\n        rua: {\n            idRua: null\n        }\n    });\n\n    useEffect(() => {\n        getRuas();\n        getUsuarios();\n    }, []);\n\n    function getRuas() {\n        Api.get('/rua/recuperaTodos')\n            .then(resp => {\n                setRuas(resp.data);\n            })\n            .catch(() => {\n                Swal.fire(\n                    'Erro!',\n                    'Erro ao listar ruas!',\n                    'error'\n                );\n            });\n    }\n\n    function getUsuarios() {\n        Api.get('/usuario/recuperaTodos')\n            .then(resp => {\n                atualizaLista(resp.data);\n            })\n            .catch(() => {\n                Swal.fire(\n                    'Erro!',\n                    'Erro ao listar usuários!',\n                    'error'\n                );\n            });\n    }\n\n    function handleChange(event) {\n        if (event.target.name === 'rua') {\n            setValues({ ...values, rua: { idRua: event.target.value } });\n            return;\n        }\n        setValues({ ...values, [event.target.name]: event.target.value });\n    }\n\n    function hadleSubmit(event) {\n        event.preventDefault();\n        salvarUsuario();\n    }\n\n    function salvarUsuario() {\n        const data = values.dataNascimento.split('-');\n        const ano = data[0];\n        const mes = data[1];\n        const dia = data[2];\n        const novaData = `${('0' + dia).slice(-2)}/${('0' + mes).slice(-2)}/${ano}`;\n        values.dataNascimento = novaData;\n        Api.post('/usuario/cadastro', values)\n            .then(resp => {\n                toaster.notify('Dados salvos com sucesso!', { duration: 2000 });\n                resetValues();\n                atualizaLista([resp.data], values.idUsuario);\n            })\n            .catch(() => {\n                Swal.fire(\n                    'Erro!',\n                    'Erro ao salvar novo funcionário!',\n                    'error'\n                );\n            });\n    }\n\n    function atualizaLista(data, idEdit) {\n        if (!data.length) {\n            setDadosUsuario([]);\n            return;\n        }\n\n        var newArray = dadosUsuario.slice();\n\n        if (idEdit) {\n            newArray = newArray.filter(item => item.idUsuario !== idEdit);\n        }\n\n        data.forEach(item => {\n            item.Editar = true\n            item.Excluir = true\n            newArray.push(item);\n        });\n\n        setDadosUsuario(newArray);\n    }\n\n    function resetValues() {\n        setValues({\n            nome: '',\n            cpf: '',\n            dataNascimento: '',\n            telefone: '',\n            senha: '',\n            tipoUsuario: '',\n            rua: { idRua: null }\n        });\n    }\n\n    function handleClickShowPassword() {\n        setShowPassword(!showPassword);\n    }\n\n    function handleMouseDownPassword(event) {\n        event.preventDefault();\n    }\n\n    function handleClickExcluir(event, dados) {\n        executaQuestionamento(() => removeUsuario(dados));\n    }\n\n    function removeUsuarioEspecifico(id) {\n        const newArray = dadosUsuario.filter(item => item.idUsuario !== id);\n        setDadosUsuario(newArray);\n    }\n\n    function removeUsuario(dados) {\n        Api.delete(`/usuario/delete/${dados.idUsuario}`)\n            .then(() => {\n                toaster.notify('Funcionário removido com sucesso!', { duration: 2000 });\n                removeUsuarioEspecifico(dados.idUsuario);\n            })\n            .catch(() => {\n                Swal.fire(\n                    'Erro!',\n                    'Erro ao excluir funcionário!',\n                    'error'\n                );\n            })\n    }\n\n    function handleClickEditar(event, dados) {\n        const data = dados.dataNascimento.split('/');\n        const dia = data[0];\n        const mes = data[1];\n        const ano = data[2];\n        const novaData = `${ano}-${('0' + mes).slice(-2)}-${('0' + dia).slice(-2)}`;\n\n        setValues({\n            nome: dados.nome,\n            cpf: dados.cpf,\n            dataNascimento: novaData,\n            telefone: dados.telefone,\n            tipoUsuario: dados.tipoUsuario,\n            idUsuario: dados.idUsuario,\n            rua: { idRua: dados.rua.idRua }\n        });\n    }\n\n    function executaQuestionamento(cbYes) {\n        Swal.fire({\n            title: 'Exclusão',\n            text: 'Confirma a exclusão?',\n            icon: 'question',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Sim!'\n        }).then(result => {\n            if (result.isConfirmed) cbYes();\n        });\n    }\n\n    return (\n        <ContainerDefault>\n            <ContainerCenter>\n                <Box className={classes.containerHeader}>\n                    <Typography>Funcionários</Typography>\n                </Box>\n                <form onSubmit={hadleSubmit}>\n                    <Box className={classes.contentInput}>\n                        <TextField\n                            className={classes.textField}\n                            label='Nome'\n                            required\n                            name='nome'\n                            onChange={handleChange}\n                            value={values.nome}\n                        />\n                        <TextField\n                            className={classes.textField}\n                            label='Cpf'\n                            type='number'\n                            required\n                            name='cpf'\n                            onChange={handleChange}\n                            value={values.cpf}\n                        />\n                    </Box>\n                    <Box className={classes.contentInput}>\n                        <TextField\n                            className={classes.textField}\n                            label='Data nascimento'\n                            type='date'\n\n                            required\n                            name='dataNascimento'\n                            onChange={handleChange}\n                            value={values.dataNascimento}\n                            InputLabelProps={{\n                                shrink: true\n                            }}\n                        />\n                        <TextField\n                            className={classes.textField}\n                            label='Telefone'\n                            type='number'\n                            required\n                            name='telefone'\n                            onChange={handleChange}\n                            value={values.telefone}\n                        />\n                    </Box>\n                    <Box className={classes.contentInput}>\n                        <FormControl\n                            className={classes.textField}\n                            variant='filled'\n                            fullWidth\n                            required\n                        >\n                            <InputLabel>Função</InputLabel>\n                            <Select\n                                name='tipoUsuario'\n                                value={values.tipoUsuario}\n                                onChange={handleChange}\n                            >\n                                <MenuItem value={'D'}>Dentista</MenuItem>\n                                <MenuItem value={'R'}>Recepcionista</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <TextField\n                            className={classes.textField}\n                            label='Senha'\n                            name='senha'\n                            required\n                            value={values.senha}\n                            onChange={handleChange}\n                            type={showPassword ? 'text' : 'password'}\n                            InputProps={{\n                                endAdornment: (\n                                    <InputAdornment position='end'>\n                                        <IconButton\n                                            onClick={handleClickShowPassword}\n                                            onMouseDown={handleMouseDownPassword}\n                                        >\n                                            {showPassword ? <Visibility /> : <VisibilityOff />}\n                                        </IconButton>\n                                    </InputAdornment>\n                                )\n                            }}\n                        />\n                    </Box>\n                    <Box className={classes.contentInput}>\n                        <FormControl\n                            className={classes.textField}\n                            variant='filled'\n                            fullWidth\n                            required\n                        >\n                            <InputLabel>Rua</InputLabel>\n                            <Select\n                                name='rua'\n                                value={values.rua.idRua}\n                                onChange={handleChange}\n                            >\n                                {\n                                    ruas.map(item => {\n                                        return <MenuItem value={item.idRua}>{item.idRua} - {item.nome}</MenuItem>\n                                    })\n                                }\n                            </Select>\n                        </FormControl>\n                    </Box>\n                    <Box className={classes.contentButton}>\n                        <Button color='primary'\n                            className={classes.btnSalvar}\n                            startIcon={<SaveIcon />}\n                            type='submit'\n                        >\n                            Salvar\n                    </Button>\n                    </Box>\n                </form>\n                <MaterialTable\n                    colunsHeader={colunsHeader}\n                    data={dadosUsuario}\n                    type='USUARIO'\n                    onClickExcluir={handleClickExcluir}\n                    onClickEditar={handleClickEditar}\n                />\n            </ContainerCenter>\n        </ContainerDefault>\n    )\n}","/home/fabio/database-work/database-work-front/src/pages/Cidade.jsx",["81"],{"ruleId":"82","severity":1,"message":"83","line":34,"column":1,"nodeType":"84","endLine":69,"endColumn":3},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"85","replacedBy":"89"},{"ruleId":"87","replacedBy":"90"},{"ruleId":"85","replacedBy":"91"},{"ruleId":"87","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":29,"column":10,"nodeType":"95","messageId":"96","endLine":29,"endColumn":21},{"ruleId":"93","severity":1,"message":"97","line":30,"column":40,"nodeType":"95","messageId":"96","endLine":30,"endColumn":48},{"ruleId":"85","replacedBy":"98"},{"ruleId":"87","replacedBy":"99"},{"ruleId":"85","replacedBy":"100"},{"ruleId":"87","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":47,"column":9,"nodeType":"104","messageId":"105","endLine":96,"endColumn":10},{"ruleId":"106","severity":1,"message":"107","line":84,"column":8,"nodeType":"108","endLine":84,"endColumn":10,"suggestions":"109"},{"ruleId":"106","severity":1,"message":"110","line":64,"column":8,"nodeType":"108","endLine":64,"endColumn":10,"suggestions":"111"},"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-native-reassign",["112"],"no-negated-in-lhs",["113"],["112"],["113"],["112"],["113"],"no-unused-vars","'useSelector' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.",["112"],["113"],["112"],["113"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUsuarios'. Either include it or remove the dependency array.","ArrayExpression",["114"],"React Hook useEffect has a missing dependency: 'getCidades'. Either include it or remove the dependency array.",["115"],"no-global-assign","no-unsafe-negation",{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},"Update the dependencies array to be: [getUsuarios]",{"range":"120","text":"121"},"Update the dependencies array to be: [getCidades]",{"range":"122","text":"123"},[2295,2297],"[getUsuarios]",[1754,1756],"[getCidades]"]